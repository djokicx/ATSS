/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import static org.junit.Assert.*;

import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutionException;

import org.junit.Test;

import com.google.gson.Gson;

import yahoofinance.Stock;

public class TestATSS {
    
    
    
//    @Test
    public void testHistoricCANN2107Dec12() throws IOException {
        Scraper scraper = new Scraper();
        Calendar to = new GregorianCalendar(2017, 11, 12);
        
        Stock stock = scraper.getHistoricDate("CANN", to);
        
        assertTrue(Screener.isWinner(stock));
    }
    
//    @Test
    public void testHistoricCANN2018Jan03() throws IOException {
        Scraper scraper = new Scraper();
        Calendar to = new GregorianCalendar(2018, 0, 3);
        
        Stock stock = scraper.getHistoricDate("CANN", to);
        
        assertTrue(Screener.isWinner(stock));
    }
    
    @Test
    public void getAllParallel() throws IOException, InterruptedException, ExecutionException {
        Scraper scraper = new Scraper();

        long start = System.currentTimeMillis();
        Map<String, Stock> dump = scraper.getAll();
        long elapsed = System.currentTimeMillis() - start;
        
        List<Object> filtered = Screener.filterStockDump(dump);
        Gson gson = new Gson();
        String object = gson.toJson(filtered);

        Util.write("All", dump.size(), elapsed, filtered.size(), object);
    }
    
//    @Test
    public void getAllHistoricalParallel() throws IOException, InterruptedException, ExecutionException {
        Scraper scraper = new Scraper();
        long start = System.currentTimeMillis();
        Map<String, Stock> dump = scraper.getAllHistoric(2014, 2017); 
        long elapsed = System.currentTimeMillis() - start;
        
        Map<String, List<HistoricalObservation>> filtered = Screener.getHistoricalWinnersAll(dump);
        Gson gson = new Gson();
        String object = gson.toJson(filtered);
        
        Util.write("Historic", dump.size(), elapsed, filtered.size(), object);
      }
}
